@ARTICLE{6392174,
  author={Sjøberg, Dag I.K. and Yamashita, Aiko and Anda, Bente C.D. and Mockus, Audris and Dybå, Tore},
  title={Quantifying the Effect of Code Smells on Maintenance Effort},
  year={2013},
  number={8},
  doi={10.1109/TSE.2012.89}
}

@article{Fault-Prone,
author = {Abidi, Mouna and Rahman, Md Saidur and Openja, Moses and Khomh, Foutse},
title = {Are Multi-Language Design Smells Fault-Prone? An Empirical Study},
issue_date = {July 2021},
journal = {ACM Trans. Softw. Eng. Methodol.},
}

@inbook{Fowler_Beck,
 title={Bad Smells in Code},
 booktitle={Refactoring: Improving the Design of Existing Code},
 author={Fowler, Martin and Beck, Kent},
 year={1999}
 }

@INPROCEEDINGS{6405287,
  author={Yamashita, Aiko and Moonen, Leon},
  booktitle={2012 28th IEEE ICSM},
  title={Do code smells reflect important maintainability aspects?},
  year={2012}}

@INPROCEEDINGS{5741260,
  author={Abbes, Marwen and Khomh, Foutse and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano},
  booktitle={2011 15th European CSMR},
  title={An Empirical Study of the Impact of Two Antipatterns, Blob and Spaghetti Code, on Program Comprehension},
  year={2011}}

@INPROCEEDINGS{Palomba,
  author={Palomba, Fabio and Panichella, Annibale and De Lucia, Andrea and Oliveto, Rocco and Zaidman, Andy},
  booktitle={2016 IEEE 24th ICPC},
  title={A textual-based technique for Smell Detection},
  year={2016},
}


@inproceedings{DetectingDefectsInObject,
author = {Travassos, Guilherme and Shull, Forrest and Fredericks, Michael and Basili, Victor R.},
title = {Detecting Defects in Object-oriented Designs: Using Reading Techniques to Increase Software Quality},
year = {1999},
booktitle = {the 14th ACM OOPSLA},
}

@misc{PMD,
title={PMD},
url={https://github.com/pmd},
year={2012},
}

@misc{CheckStyle,
title={Checkstyle},
url={https://github.com/checkstyle/checkstyle},
year={2013},
}

@inproceedings{723183,
  author={Kullbach, B. and Winter, A. and Dahm, P. and Ebert, J.},
  booktitle={1998, 5th SANER},
  title={Program Comprehension in Multi-language Systems},
  year={1998}}


@inproceedings{10.1109/SCAM.2012.11,
author = {Mayer, Philip and Schroeder, Andreas},
title = {Cross-Language Code Analysis and Refactoring},
year = {2012},
url = {https://doi.org/10.1109/SCAM.2012.11},
doi = {10.1109/SCAM.2012.11},
booktitle={2012 IEEE 12th SCAM},
series = {SCAM '12}
}

@INPROCEEDINGS{7476675,
  author={Kochhar, Pavneet Singh and Wijedasa, Dinusha and Lo, David},
  booktitle={2016 IEEE 23rd SANER},
  title={A Large Scale Study of Multiple Programming Languages and Code Quality},
  year={2016}}

@INPROCEEDINGS{7396422,
  author={Mushtaq, Zaigham and Rasool, Ghulam},
  booktitle={2015 ICOSST},
  title={Multilingual source code analysis: State of the art and challenges},
  year={2015}}


@INPROCEEDINGS{developersCare,
  author={Yamashita, Aiko and Moonen, Leon},
  booktitle={2013 20th WCRE},
  title={Do Developers Care About Code Smells? An Exploratory Survey},
  year={2013}}


  @INPROCEEDINGS{1173068,
  author={van Emden, E. and Moonen, L.},
  booktitle={ 2002. 9th Working Conference on Reverse Engineering},
  title={Java Quality Assurance by Detecting Code Smells},
  year={2002}}

  @misc{treeSitter,
    author = {Brunsfeld, Max},
    title = {tree-sitter},
    year = {2013},
    url = {https://github.com/tree-sitter/tree-sitter}
}

  @misc{ApacheCommonsLang,
    title = {Apache Commons Lang},
    year = {2009},
    url = {https://github.com/apache/commons-lang}
}

  @misc{Jekins,
    title = {Jenkins},
    year = {2010},
    url = {https://github.com/jenkinsci/jenkins}
}


@misc{Django,
  title = {Django},
  url = {https://www.djangoproject.com},
  year= {2012}
}

@misc{MomentJS,
  title = {Moment.js},
  url = {https://momentjs.com/},
  year= {2011}
}

@misc{Maven,
  title = {Apache Maven},
  url = {https://maven.apache.org/},
  year= {2009}
}

@INPROCEEDINGS{Pysmell,
  author={Chen, Zhifei and Chen, Lin and Ma, Wanwangying and Xu, Baowen},
  booktitle={2016 SATE},
  title={Detecting Code Smells in Python Programs},
  year={2016}
  }


@book{CleanCode,
  author         = {Martin, Robert Cecil},
  publisher      = {Prentice Hall},
  title          = {Clean Code: A Handbook of Agile Software Craftsmanship},
  year           = {2009}
}
@INPROCEEDINGS{SQLInJava,
  author={Nagy, Csaba and Cleve, Anthony},
  booktitle={2017 IEEE 17th SCAM},
  title={A Static Code Smell Detector for SQL Queries Embedded in Java Code},
  year={2017}
  }


@book{SQLAntipatterns,
author = {Karwin, Bill},
title = {SQL Antipatterns: Avoiding the Pitfalls of Database Programming},
year = {2010},
publisher = {Pragmatic Bookshelf},
}

@book{RefactoringWorkbook,
author = {Wake, William C.},
title = {Refactoring Workbook},
year = {2003},
publisher = {Addison-Wesley Longman Publishing Co., Inc.}
}



@INPROCEEDINGS{whenandwhy,
  author={Tufano, Michele and Palomba, Fabio and Bavota, Gabriele and Oliveto, Rocco and Di Penta, Massimiliano and De Lucia, Andrea and Poshyvanyk, Denys},
  booktitle={2015 IEEE/ACM 37th ICSE},
  title={When and Why Your Code Starts to Smell Bad},
  year={2015},
}

  @INPROCEEDINGS{lifespan,
  author={Peters, Ralph and Zaidman, Andy},
  booktitle={2012 16th CSMR},
  title={Evaluating the Lifespan of Code Smells using Software Repository Mining},
  year={2012}
  }


@inbook{Jerzyk2023,
	author = {Jerzyk, Marcel and Madeyski, Lech},
	booktitle = {Developments in Information and Knowledge Management Systems for Business Applications: Volume 7},
	editor = {Kryvinska, Natalia and Gregu{\v{s}}, Michal and Fedushko, Solomiia},
	publisher = {Springer Nature Switzerland},
	title = {Code Smells: A Comprehensive Online Catalog and Taxonomy},
	year = {2023}
  }


@inproceedings{DetectingDefectsInObject-orientedDesigns,
author = {Travassos, Guilherme and Shull, Forrest and Fredericks, Michael and Basili, Victor R.},
title = {Detecting defects in object-oriented designs: using reading techniques to increase software quality},
year = {1999},
publisher = {Association for Computing Machinery},
abstract = {Inspections can be used to identify defects in software artifacts. In this way, inspection methods help to improve software quality, especially when used early in software development. Inspections of software design may be especially crucial since design defects (problems of correctness and completeness with respect to the requirements, internal consistency, or other quality attributes) can directly affect the quality of, and effort required for, the implementation.We have created a set of “reading techniques” (so called because they help a reviewer to “read” a design artifact for the purpose of finding relevant information) that gives specific and practical guidance for identifying defects in Object-Oriented designs. Each reading technique in the family focuses the reviewer on some aspect of the design, with the goal that an inspection team applying the entire family should achieve a high degree of coverage of the design defects.In this paper, we present an overview of this new set of reading techniques. We discuss how some elements of these techniques are based on empirical results concerning an analogous set of reading techniques that supports defect detection in requirements documents. We present an initial empirical study that was run to assess the feasibility of these new techniques, and discuss the changes made to the latest version of the techniques based on the results of this study.},
booktitle = {1999 14th OOPSLA},
series = {OOPSLA '99}
}


@article{SANTOS2018450,
title = {A systematic review on the code smell effect},
journal = {Journal of Systems and Software},
year = {2018},
author = {José Amancio M. Santos and João B. Rocha-Junior and Luciana Carla Lins Prates and Rogeres Santos do Nascimento and Mydiã Falcão Freitas and Manoel Gomes de Mendonça},
}


@article{ML,
author = {Pontillo, Valeria and Amoroso d’Aragona, Dario and Pecorelli, Fabiano and Di Nucci, Dario and Ferrucci, Filomena and Palomba, Fabio},
title = {Machine learning-based test smell detection},
year = {2024},
issue_date = {Mar 2024},
}

@inproceedings{Santana,
author = {Santana, Amanda and Cruz, Daniel and Figueiredo, Eduardo},
title = {An exploratory study on the identification and evaluation of bad smell agglomerations},
year = {2021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
booktitle = {2021 36th SAC},
series = {SAC '21}
}


@article{Pascarella,
  title={On The Effect Of Code Review On Code Smells},
  author={Luca Pascarella and Davide Spadini and Fabio Palomba and Alberto Bacchelli},
  journal={ArXiv},
  year={2019},
}

@misc{Jscent,
    author = {Starke, Sarchen},
    title = {Jscent},
    year = {2021},
}

@misc{DesigniteJava,
    author = {Sharma, Tushar},
    title = {DesigniteJava},
    year = {2021},
}


@inproceedings{MultiLanguageCodeSmells,
author = {Abidi, Mouna and Grichi, Manel and Khomh, Foutse and Gu\'{e}h\'{e}neuc, Yann-Ga\"{e}l},
title = {Code smells for multi-language systems},
year = {2019},
publisher = {Association for Computing Machinery},
booktitle = {2019 24th EUROPLOP},
series = {EuroPLop '19}
}

@INPROCEEDINGS{Abidi2,
  author={Abidi, Mouna and Openja, Moses and Khomh, Foutse},
  booktitle={2020 IEEE/ACM 17th MSR},
  title={Multi-language Design Smells: A Backstage Perspective},
  year={2020}
  }
